program : OPENTAG declaration_list CLOSETAG

declaration_list : declaration_list  declaration
                | declaration

declaration : var_declaration
                | echo_stmt
                | selection_stmt
			    | iteration_stmt
                | fun_declaration
				| header_declaration

var_declaration : IDVAR SEMICOLON var_declaration
                | IDVAR SEMICOLON
                | TIMESTIMES IDVAR SEMICOLON
                | TIMESTIMES IDVAR SEMICOLON var_declaration
                | IDVAR EQUAL data_type SEMICOLON var_declaration
                | IDVAR EQUAL data_type SEMICOLON
                | IDVAR EQUAL IDVAR SEMICOLON var_declaration
                | IDVAR EQUAL IDVAR SEMICOLON
                | AMPERSANT IDVAR SEMICOLON var_declaration
                | AMPERSANT IDVAR EQUAL IDVAR SEMICOLON  var_declaration
                | AMPERSANT IDVAR EQUAL IDVAR SEMICOLON
                | AMPERSANT IDVAR SEMICOLON
                | IDVAR EQUAL simple_expression SEMICOLON

echo_stmt : echo_stmt ECHO data_type SEMICOLON
                | echo_stmt ECHO IDVAR SEMICOLON
                | echo_stmt ECHO fun_declaration SEMICOLON
                | empty

data_type : NUMBER
            | boolean
            | STRING

boolean : TRUE
        | FALSE


fun_declaration : FUNCTION ID LPAREN params RPAREN compount_stmt

params : param_list
        | empty

param_list : param_list COMMA param
        | param

param : IDVAR
        | IDVAR LBRACKET RBRACKET

compount_stmt : LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK

local_declarations : local_declarations var_declaration
        | empty

statement_list : statement_list statement
        | empty

statement : expression_stmt
				| compount_stmt
				| selection_stmt
				| iteration_stmt
				| echo_stmt
				| return_stmt

expression_stmt : expression SEMICOLON
                | SEMICOLON

selection_stmt : IF LPAREN expression RPAREN statement
        | IF LPAREN expression RPAREN statement selection

selection : ELSE statement
        | ELSEIF statement selection

selection_stmt : SWITCH LPAREN var RPAREN statement
        | CASE NUMBER COLON statement BREAK SEMICOLON
        | DEFAULT COLON statement BREAK SEMICOLON

iteration_stmt : WHILE LPAREN expression RPAREN statement

iteration_stmt : FOR LPAREN var_declaration SEMICOLON expression SEMICOLON additive_expression RPAREN statement

iteration_stmt : DO LBLOCK statement SEMICOLON RBLOCK WHILE LPAREN expression RPAREN

return_stmt : RETURN SEMICOLON
        | RETURN expression SEMICOLON

expression : var EQUAL expression
        | simple_expression
        | var EQUAL AMPERSANT IDVAR
        | expression logic_operator expression

logic_operator : AND
                | OR
                | XOR
var : IDVAR
    | IDVAR LBRACKET expression RBRACKET

simple_expression : additive_expression rel_op additive_expression
                | additive_expression

rel_op : LESS
        | LESSEQUAL
        | GREATER
        | GREATEREQUAL
        | DEQUAL
        | DISTINT
        | ISEQUAL

additive_expression : additive_expression addop term
                | term
                | term MINUSMINUS
                | term PLUSPLUS

addop : PLUS
        | MINUS

term : term mulop factor
        | factor

mulop : TIMES
        | DIVIDE

factor : LPAREN expression RPAREN
        | var
        | NUMBER
        | boolean
        | IDVAR LPAREN args RPAREN

args : args_list
        | empty
        | VOID

args_list : args_list COMMA expression
        | expression


header_declaration : REQUIRE LPAREN STRING RPAREN SEMICOLON
                   | INCLUDE LPAREN STRING RPAREN SEMICOLON

empty :

