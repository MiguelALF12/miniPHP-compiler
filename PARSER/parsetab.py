
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCOMMArightEQUALPLUSEQUALMINUSEQUALleftSEMICOLONleftORleftXORleftANDnonassocISEQUALDEQUALnonassocLESSLESSEQUALGREATERGREATEREQUALleftPLUSMINUSrightLBRACKETnonassocNEWCLONEleftELSEIFleftELSErightPRIVATEPROTECTEDPUBLICABSTRACT AMPERSANT AND ARRAY AS BREAK CALLABLE CASE CATCH CLASS CLONE CLOSETAG COLON COMMA CONST CONTINUE DECLARE DEFAULT DEQUAL DIE DISTINT DIVIDE DO DOT DOUBLEQUOTE ECHO ELSE ELSEIF ENDDECLARE ENDFOR ENDFOREACH ENDIF ENDSWITCH ENDWHILE EQUAL EVAL EXIT EXTENDS FALSE FOR FOREACH FUNCTION GLOBAL GOTO GREATER GREATEREQUAL HASHTAG ID IDVAR IF IMPLEMENTS INCLUDE INCLUDE_ONCE INSTANCEOF INSTEADOF INTERFACE ISEQUAL ISSET LBLOCK LBRACKET LESS LESSEQUAL LIST LPAREN MINUS MINUSEQUAL MINUSMINUS NAMESPACE NEW NUMBER OPENTAG OR PLUS PLUSEQUAL PLUSPLUS PRINT PRIVATE PROTECTED PUBLIC QUESTIONMARK QUOTE RBLOCK RBRACKET REQUIRE REQUIRE_ONCE RETURN RPAREN SEMICOLON STATIC STRING SWITCH THROW TIMES TIMESEQUAL TIMESTIMES TRAIT TRUE TRY UNSET USE VOID WHILE XOR __HALT_COMPILERprogram : OPENTAG declaration_list CLOSETAGdeclaration_list : declaration_list  declaration\n                           | declaration\n    declaration : var_declaration\n                | echo_stmt\n                | selection_stmt\n\t\t\t    | iteration_stmt\n                | fun_declaration\n\t\t\t\t| header_declaration\n\techo_stmt : echo_stmt ECHO data_type SEMICOLON\n                | echo_stmt ECHO IDVAR SEMICOLON\n                | echo_stmt ECHO fun_declaration SEMICOLON\n                | empty\n\t\n\tdata_type : NUMBER\n            | boolean\n            | STRING\n\tboolean : TRUE\n\t\t\t   | FALSE\n\tvar_declaration : var_declaration2 SEMICOLONvar_declaration2 : IDVAR var_declaration2\n                | IDVAR\n                | TIMESTIMES IDVAR\n                | TIMESTIMES IDVAR var_declaration2\n                | IDVAR EQUAL data_type var_declaration2\n                | IDVAR EQUAL data_type\n                | IDVAR EQUAL IDVAR var_declaration2\n                | IDVAR EQUAL IDVAR\n                | AMPERSANT IDVAR var_declaration2\n                | AMPERSANT IDVAR EQUAL IDVAR  var_declaration2\n                | AMPERSANT IDVAR EQUAL IDVAR\n                | AMPERSANT IDVAR\n                | IDVAR EQUAL simple_expression\n\tfun_declaration : FUNCTION ID LPAREN params RPAREN\n\t\t\t\t\t   | FUNCTION ID LPAREN params RPAREN compount_stmt\n\tparams : param_list\n\t\t\t  | empty\n\tparam_list : param_list COMMA param_list\n\t\t\t\t  | param\n\tparam : IDVAR\n             | IDVAR LBRACKET RBRACKET\n    compount_stmt : LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCKlocal_declarations : local_declarations var_declaration\n\t\t\t\t\t\t  | empty\n\tstatement_list : statement_list statement\n\t\t\t\t\t  | empty\n\tstatement : expression_stmt\n\t\t\t\t| compount_stmt\n\t\t\t\t| selection_stmt\n\t\t\t\t| iteration_stmt\n\t\t\t\t| echo_stmt\n\t\t\t\t| return_stmt\n\texpression_stmt : expression SEMICOLON\n\t\t\t\t\t| SEMICOLON\n\tselection_stmt : IF LPAREN expression RPAREN statement\n\t\t\t\t\t  | IF LPAREN expression RPAREN statement selection\n\tselection : ELSE statement\n\t\t\t\t | ELSEIF statement selection\n\t selection_stmt : SWITCH LPAREN var RPAREN statement\n\t\t\t\t\t  | CASE NUMBER COLON statement BREAK SEMICOLON\n\t\t\t\t\t  | DEFAULT COLON statement BREAK SEMICOLON\n\titeration_stmt : FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement iteration_stmt : WHILE LPAREN expression RPAREN statementiteration_stmt : DO LBLOCK statement SEMICOLON RBLOCK WHILE LPAREN expression RPARENreturn_stmt : RETURN SEMICOLON\n\t\t\t\t   | RETURN expression SEMICOLON\n\texpression : var EQUAL expressionexpression : simple_expressionexpression : var EQUAL AMPERSANT IDVARexpression : expression logic_operator expression\n\tlogic_operator : AND\n\t\t\t\t\t| OR\n\t\t\t\t\t| XOR\n\tvar : IDVAR\n\t\t   | IDVAR LBRACKET expression RBRACKET\n\tsimple_expression : additive_expression relop additive_expressionsimple_expression : additive_expressionrelop : LESS\n\t\t\t | LESSEQUAL\n\t\t\t | GREATER\n\t\t\t | GREATEREQUAL\n\t\t\t | DEQUAL\n\t\t\t | DISTINT\n\t\t\t | ISEQUAL\n\tadditive_expression : additive_expression addop termadditive_expression : termadditive_expression : term MINUSMINUSadditive_expression : term PLUSPLUSaddop : PLUS\n\t\t\t | MINUS\n\tterm : term mulop factor\n\t\t\t| factor\n\tmulop : TIMES\n\t\t\t | DIVIDE\n\tfactor : LPAREN expression RPAREN\n\t\t\t  | var\n\t\t\t  | NUMBER\n\t\t\t  | boolean\n\t\t\t  | ID LPAREN args RPAREN\n\targs : args_list\n\t\t\t| empty\n\t\t\t| VOID\n\targs_list : args_list COMMA expression\n\t\t\t\t | expression\n\theader_declaration : REQUIRE LPAREN STRING RPAREN SEMICOLON\n                          | INCLUDE LPAREN STRING RPAREN SEMICOLON\n    empty :'
    
_lr_action_items = {'OPENTAG':([0,],[2,]),'$end':([1,26,],[0,-1,]),'IF':([2,3,4,5,6,7,8,9,10,13,27,29,35,38,70,72,73,74,75,76,77,78,80,91,92,93,115,121,124,125,126,129,149,153,155,156,157,158,160,162,165,166,171,172,173,175,176,177,180,184,186,187,190,191,192,193,195,196,197,],[14,14,-3,-4,-5,-6,-7,-8,-9,-13,-2,-19,14,14,14,-53,-46,-47,-48,-49,-50,-51,-106,-10,-11,-12,14,14,-52,-106,-64,14,-54,-58,-60,-106,-43,-65,-62,-33,-104,-105,-55,14,14,-59,-106,-42,-34,-56,14,-45,-57,-50,-44,14,-41,-61,-63,]),'SWITCH':([2,3,4,5,6,7,8,9,10,13,27,29,35,38,70,72,73,74,75,76,77,78,80,91,92,93,115,121,124,125,126,129,149,153,155,156,157,158,160,162,165,166,171,172,173,175,176,177,180,184,186,187,190,191,192,193,195,196,197,],[15,15,-3,-4,-5,-6,-7,-8,-9,-13,-2,-19,15,15,15,-53,-46,-47,-48,-49,-50,-51,-106,-10,-11,-12,15,15,-52,-106,-64,15,-54,-58,-60,-106,-43,-65,-62,-33,-104,-105,-55,15,15,-59,-106,-42,-34,-56,15,-45,-57,-50,-44,15,-41,-61,-63,]),'CASE':([2,3,4,5,6,7,8,9,10,13,27,29,35,38,70,72,73,74,75,76,77,78,80,91,92,93,115,121,124,125,126,129,149,153,155,156,157,158,160,162,165,166,171,172,173,175,176,177,180,184,186,187,190,191,192,193,195,196,197,],[16,16,-3,-4,-5,-6,-7,-8,-9,-13,-2,-19,16,16,16,-53,-46,-47,-48,-49,-50,-51,-106,-10,-11,-12,16,16,-52,-106,-64,16,-54,-58,-60,-106,-43,-65,-62,-33,-104,-105,-55,16,16,-59,-106,-42,-34,-56,16,-45,-57,-50,-44,16,-41,-61,-63,]),'DEFAULT':([2,3,4,5,6,7,8,9,10,13,27,29,35,38,70,72,73,74,75,76,77,78,80,91,92,93,115,121,124,125,126,129,149,153,155,156,157,158,160,162,165,166,171,172,173,175,176,177,180,184,186,187,190,191,192,193,195,196,197,],[17,17,-3,-4,-5,-6,-7,-8,-9,-13,-2,-19,17,17,17,-53,-46,-47,-48,-49,-50,-51,-106,-10,-11,-12,17,17,-52,-106,-64,17,-54,-58,-60,-106,-43,-65,-62,-33,-104,-105,-55,17,17,-59,-106,-42,-34,-56,17,-45,-57,-50,-44,17,-41,-61,-63,]),'FOR':([2,3,4,5,6,7,8,9,10,13,27,29,35,38,70,72,73,74,75,76,77,78,80,91,92,93,115,121,124,125,126,129,149,153,155,156,157,158,160,162,165,166,171,172,173,175,176,177,180,184,186,187,190,191,192,193,195,196,197,],[18,18,-3,-4,-5,-6,-7,-8,-9,-13,-2,-19,18,18,18,-53,-46,-47,-48,-49,-50,-51,-106,-10,-11,-12,18,18,-52,-106,-64,18,-54,-58,-60,-106,-43,-65,-62,-33,-104,-105,-55,18,18,-59,-106,-42,-34,-56,18,-45,-57,-50,-44,18,-41,-61,-63,]),'WHILE':([2,3,4,5,6,7,8,9,10,13,27,29,35,38,70,72,73,74,75,76,77,78,80,91,92,93,115,121,124,125,126,129,149,153,155,156,157,158,160,161,162,165,166,171,172,173,175,176,177,180,184,186,187,190,191,192,193,195,196,197,],[19,19,-3,-4,-5,-6,-7,-8,-9,-13,-2,-19,19,19,19,-53,-46,-47,-48,-49,-50,-51,-106,-10,-11,-12,19,19,-52,-106,-64,19,-54,-58,-60,-106,-43,-65,-62,179,-33,-104,-105,-55,19,19,-59,-106,-42,-34,-56,19,-45,-57,-50,-44,19,-41,-61,-63,]),'DO':([2,3,4,5,6,7,8,9,10,13,27,29,35,38,70,72,73,74,75,76,77,78,80,91,92,93,115,121,124,125,126,129,149,153,155,156,157,158,160,162,165,166,171,172,173,175,176,177,180,184,186,187,190,191,192,193,195,196,197,],[20,20,-3,-4,-5,-6,-7,-8,-9,-13,-2,-19,20,20,20,-53,-46,-47,-48,-49,-50,-51,-106,-10,-11,-12,20,20,-52,-106,-64,20,-54,-58,-60,-106,-43,-65,-62,-33,-104,-105,-55,20,20,-59,-106,-42,-34,-56,20,-45,-57,-50,-44,20,-41,-61,-63,]),'FUNCTION':([2,3,4,5,6,7,8,9,10,13,27,28,29,72,73,74,75,76,77,78,91,92,93,115,121,124,126,129,149,153,155,158,160,162,165,166,171,172,175,180,184,190,193,195,196,197,],[21,21,-3,-4,-5,-6,-7,-8,-9,-13,-2,21,-19,-53,-46,-47,-48,-49,-50,-51,-10,-11,-12,-106,-106,-52,-64,-106,-54,-58,-60,-65,-62,-33,-104,-105,-55,-106,-59,-34,-56,-57,-106,-41,-61,-63,]),'REQUIRE':([2,3,4,5,6,7,8,9,10,13,27,29,72,73,74,75,76,77,78,91,92,93,115,121,124,126,129,149,153,155,158,160,162,165,166,171,172,175,180,184,190,193,195,196,197,],[22,22,-3,-4,-5,-6,-7,-8,-9,-13,-2,-19,-53,-46,-47,-48,-49,-50,-51,-10,-11,-12,-106,-106,-52,-64,-106,-54,-58,-60,-65,-62,-33,-104,-105,-55,-106,-59,-34,-56,-57,-106,-41,-61,-63,]),'INCLUDE':([2,3,4,5,6,7,8,9,10,13,27,29,72,73,74,75,76,77,78,91,92,93,115,121,124,126,129,149,153,155,158,160,162,165,166,171,172,175,180,184,190,193,195,196,197,],[23,23,-3,-4,-5,-6,-7,-8,-9,-13,-2,-19,-53,-46,-47,-48,-49,-50,-51,-10,-11,-12,-106,-106,-52,-64,-106,-54,-58,-60,-65,-62,-33,-104,-105,-55,-106,-59,-34,-56,-57,-106,-41,-61,-63,]),'IDVAR':([2,3,4,5,6,7,8,9,10,12,13,24,25,27,28,29,31,32,33,35,36,37,38,42,43,49,50,51,52,53,55,56,60,70,72,73,74,75,76,77,78,80,81,85,90,91,92,93,95,97,98,99,100,101,102,103,104,105,106,107,110,111,112,114,115,116,117,118,119,120,121,124,125,126,128,129,138,149,152,153,155,156,157,158,160,162,163,165,166,170,171,172,173,175,176,177,178,180,184,186,187,189,190,191,192,193,195,196,197,],[12,12,-3,-4,-5,-6,-7,-8,-9,12,-13,42,43,-2,45,-19,52,66,66,66,12,66,66,12,12,-16,-17,-18,12,12,-14,-15,66,66,-53,-46,-47,-48,-49,-50,-51,-106,66,135,138,-10,-11,-12,66,66,66,-77,-78,-79,-80,-81,-82,-83,-88,-89,66,-92,-93,66,66,66,-70,-71,-72,66,66,-52,-106,-64,66,66,12,-54,174,-58,-60,12,-43,-65,-62,-33,135,-104,-105,66,-55,66,66,-59,-106,-42,66,-34,-56,66,-45,66,-57,-50,-44,66,-41,-61,-63,]),'TIMESTIMES':([2,3,4,5,6,7,8,9,10,12,13,27,29,36,42,43,49,50,51,52,53,55,56,72,73,74,75,76,77,78,80,91,92,93,115,121,124,125,126,129,138,149,153,155,156,157,158,160,162,165,166,171,172,175,177,180,184,190,193,195,196,197,],[24,24,-3,-4,-5,-6,-7,-8,-9,24,-13,-2,-19,24,24,24,-16,-17,-18,24,24,-14,-15,-53,-46,-47,-48,-49,-50,-51,-106,-10,-11,-12,-106,-106,-52,-106,-64,-106,24,-54,-58,-60,24,-43,-65,-62,-33,-104,-105,-55,-106,-59,-42,-34,-56,-57,-106,-41,-61,-63,]),'AMPERSANT':([2,3,4,5,6,7,8,9,10,12,13,27,29,36,42,43,49,50,51,52,53,55,56,72,73,74,75,76,77,78,80,91,92,93,115,120,121,124,125,126,129,138,149,153,155,156,157,158,160,162,165,166,171,172,175,177,180,184,190,193,195,196,197,],[25,25,-3,-4,-5,-6,-7,-8,-9,25,-13,-2,-19,25,25,25,-16,-17,-18,25,25,-14,-15,-53,-46,-47,-48,-49,-50,-51,-106,-10,-11,-12,-106,152,-106,-52,-106,-64,-106,25,-54,-58,-60,25,-43,-65,-62,-33,-104,-105,-55,-106,-59,-42,-34,-56,-57,-106,-41,-61,-63,]),'ECHO':([2,3,4,5,6,7,8,9,10,13,27,29,35,38,70,72,73,74,75,76,77,78,80,91,92,93,115,121,124,125,126,129,149,153,155,156,157,158,160,162,165,166,171,172,173,175,176,177,180,184,186,187,190,191,192,193,195,196,197,],[-106,-106,-3,-4,28,-6,-7,-8,-9,-13,-2,-19,-106,-106,-106,-53,-46,-47,-48,-49,28,-51,-106,-10,-11,-12,-106,-106,-52,28,-64,-106,-54,-58,-60,-106,-43,-65,-62,-33,-104,-105,-55,-106,-106,-59,28,-42,-34,-56,-106,-45,-57,28,-44,-106,-41,-61,-63,]),'CLOSETAG':([2,3,4,5,6,7,8,9,10,13,27,29,72,73,74,75,76,77,78,91,92,93,115,121,124,126,129,149,153,155,158,160,162,165,166,171,172,175,180,184,190,193,195,196,197,],[-106,26,-3,-4,-5,-6,-7,-8,-9,-13,-2,-19,-53,-46,-47,-48,-49,-50,-51,-10,-11,-12,-106,-106,-52,-64,-106,-54,-58,-60,-65,-62,-33,-104,-105,-55,-106,-59,-34,-56,-57,-106,-41,-61,-63,]),'SEMICOLON':([11,12,13,29,30,35,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,64,65,66,67,68,70,72,73,74,75,76,77,78,79,80,81,82,84,88,89,91,92,93,94,96,108,109,115,121,123,124,125,126,127,129,136,137,138,140,141,142,143,149,150,151,153,154,155,156,157,158,159,160,162,167,168,169,171,172,173,174,175,176,177,180,184,186,187,190,191,192,193,195,196,197,],[29,-21,-13,-19,-20,72,72,-22,-31,91,92,93,-14,-15,-16,-17,-18,-27,-25,-32,-14,-15,-76,-85,-91,-95,-95,-67,-73,-96,-97,72,-53,-46,-47,-48,-49,-50,-51,124,-106,126,128,130,-23,-28,-10,-11,-12,-26,-24,-86,-87,72,72,155,-52,-106,-64,158,72,165,166,-30,-75,-84,-90,-94,-54,-69,-66,-58,175,-60,-106,-43,-65,178,-62,-33,-29,-74,-98,-55,72,72,-68,-59,-106,-42,-34,-56,72,-45,-57,-50,-44,72,-41,-61,-63,]),'EQUAL':([12,43,64,66,168,],[31,90,120,-73,-74,]),'BREAK':([13,35,70,71,72,73,74,75,76,77,78,91,92,93,115,121,122,124,126,129,149,153,155,158,160,171,172,175,184,190,193,195,196,197,],[-13,-106,-106,123,-53,-46,-47,-48,-49,-50,-51,-10,-11,-12,-106,-106,154,-52,-64,-106,-54,-58,-60,-65,-62,-55,-106,-59,-56,-57,-106,-41,-61,-63,]),'LBLOCK':([13,20,29,35,38,70,72,73,74,75,76,77,78,80,91,92,93,115,121,124,125,126,129,149,153,155,156,157,158,160,162,171,172,173,175,176,177,184,186,187,190,191,192,193,195,196,197,],[-13,38,-19,80,80,80,-53,-46,-47,-48,-49,-50,-51,-106,-10,-11,-12,80,80,-52,-106,-64,80,-54,-58,-60,-106,-43,-65,-62,80,-55,80,80,-59,-106,-42,-56,80,-45,-57,-50,-44,80,-41,-61,-63,]),'RETURN':([13,29,35,38,70,72,73,74,75,76,77,78,80,91,92,93,115,121,124,125,126,129,149,153,155,156,157,158,160,171,172,173,175,176,177,184,186,187,190,191,192,193,195,196,197,],[-13,-19,81,81,81,-53,-46,-47,-48,-49,-50,-51,-106,-10,-11,-12,81,81,-52,-106,-64,81,-54,-58,-60,-106,-43,-65,-62,-55,81,81,-59,-106,-42,-56,81,-45,-57,-50,-44,81,-41,-61,-63,]),'LPAREN':([13,14,15,18,19,22,23,29,31,32,35,37,38,39,60,62,70,72,73,74,75,76,77,78,80,81,91,92,93,95,97,98,99,100,101,102,103,104,105,106,107,110,111,112,114,115,116,117,118,119,120,121,124,125,126,128,129,149,153,155,156,157,158,160,170,171,172,173,175,176,177,178,179,184,186,187,189,190,191,192,193,195,196,197,],[-13,32,33,36,37,40,41,-19,60,60,60,60,60,85,60,114,60,-53,-46,-47,-48,-49,-50,-51,-106,60,-10,-11,-12,60,60,60,-77,-78,-79,-80,-81,-82,-83,-88,-89,60,-92,-93,60,60,60,-70,-71,-72,60,60,-52,-106,-64,60,60,-54,-58,-60,-106,-43,-65,-62,60,-55,60,60,-59,-106,-42,60,189,-56,60,-45,60,-57,-50,-44,60,-41,-61,-63,]),'NUMBER':([13,16,28,29,31,32,35,37,38,60,70,72,73,74,75,76,77,78,80,81,91,92,93,95,97,98,99,100,101,102,103,104,105,106,107,110,111,112,114,115,116,117,118,119,120,121,124,125,126,128,129,149,153,155,156,157,158,160,170,171,172,173,175,176,177,178,184,186,187,189,190,191,192,193,195,196,197,],[-13,34,47,-19,55,67,67,67,67,67,67,-53,-46,-47,-48,-49,-50,-51,-106,67,-10,-11,-12,67,67,67,-77,-78,-79,-80,-81,-82,-83,-88,-89,67,-92,-93,67,67,67,-70,-71,-72,67,67,-52,-106,-64,67,67,-54,-58,-60,-106,-43,-65,-62,67,-55,67,67,-59,-106,-42,67,-56,67,-45,67,-57,-50,-44,67,-41,-61,-63,]),'ID':([13,21,29,31,32,35,37,38,60,70,72,73,74,75,76,77,78,80,81,91,92,93,95,97,98,99,100,101,102,103,104,105,106,107,110,111,112,114,115,116,117,118,119,120,121,124,125,126,128,129,149,153,155,156,157,158,160,170,171,172,173,175,176,177,178,184,186,187,189,190,191,192,193,195,196,197,],[-13,39,-19,62,62,62,62,62,62,62,-53,-46,-47,-48,-49,-50,-51,-106,62,-10,-11,-12,62,62,62,-77,-78,-79,-80,-81,-82,-83,-88,-89,62,-92,-93,62,62,62,-70,-71,-72,62,62,-52,-106,-64,62,62,-54,-58,-60,-106,-43,-65,-62,62,-55,62,62,-59,-106,-42,62,-56,62,-45,62,-57,-50,-44,62,-41,-61,-63,]),'TRUE':([13,28,29,31,32,35,37,38,60,70,72,73,74,75,76,77,78,80,81,91,92,93,95,97,98,99,100,101,102,103,104,105,106,107,110,111,112,114,115,116,117,118,119,120,121,124,125,126,128,129,149,153,155,156,157,158,160,170,171,172,173,175,176,177,178,184,186,187,189,190,191,192,193,195,196,197,],[-13,50,-19,50,50,50,50,50,50,50,-53,-46,-47,-48,-49,-50,-51,-106,50,-10,-11,-12,50,50,50,-77,-78,-79,-80,-81,-82,-83,-88,-89,50,-92,-93,50,50,50,-70,-71,-72,50,50,-52,-106,-64,50,50,-54,-58,-60,-106,-43,-65,-62,50,-55,50,50,-59,-106,-42,50,-56,50,-45,50,-57,-50,-44,50,-41,-61,-63,]),'FALSE':([13,28,29,31,32,35,37,38,60,70,72,73,74,75,76,77,78,80,81,91,92,93,95,97,98,99,100,101,102,103,104,105,106,107,110,111,112,114,115,116,117,118,119,120,121,124,125,126,128,129,149,153,155,156,157,158,160,170,171,172,173,175,176,177,178,184,186,187,189,190,191,192,193,195,196,197,],[-13,51,-19,51,51,51,51,51,51,51,-53,-46,-47,-48,-49,-50,-51,-106,51,-10,-11,-12,51,51,51,-77,-78,-79,-80,-81,-82,-83,-88,-89,51,-92,-93,51,51,51,-70,-71,-72,51,51,-52,-106,-64,51,51,-54,-58,-60,-106,-43,-65,-62,51,-55,51,51,-59,-106,-42,51,-56,51,-45,51,-57,-50,-44,51,-41,-61,-63,]),'RBLOCK':([13,29,72,73,74,75,76,77,78,80,91,92,93,115,121,124,125,126,129,130,149,153,155,156,157,158,160,171,172,175,176,177,184,186,187,190,191,192,193,195,196,197,],[-13,-19,-53,-46,-47,-48,-49,-50,-51,-106,-10,-11,-12,-106,-106,-52,-106,-64,-106,161,-54,-58,-60,-106,-43,-65,-62,-55,-106,-59,-106,-42,-56,-106,-45,-57,195,-44,-106,-41,-61,-63,]),'ELSE':([13,72,73,74,75,76,77,78,91,92,93,115,121,124,126,129,149,153,155,158,160,171,172,173,175,184,185,190,193,195,196,197,],[-13,-53,-46,-47,-48,-49,-50,-51,-10,-11,-12,-106,-106,-52,-64,-106,172,-58,-60,-65,-62,-55,-106,-106,-59,-56,172,-57,-106,-41,-61,-63,]),'ELSEIF':([13,72,73,74,75,76,77,78,91,92,93,115,121,124,126,129,149,153,155,158,160,171,172,173,175,184,185,190,193,195,196,197,],[-13,-53,-46,-47,-48,-49,-50,-51,-10,-11,-12,-106,-106,-52,-64,-106,173,-58,-60,-65,-62,-55,-106,-106,-59,-56,173,-57,-106,-41,-61,-63,]),'COLON':([17,34,],[35,70,]),'STRING':([28,31,40,41,],[49,49,86,87,]),'MINUSMINUS':([50,51,52,55,56,58,59,61,64,66,67,68,142,143,168,169,],[-17,-18,-73,-96,-97,108,-91,-95,-95,-73,-96,-97,-90,-94,-74,-98,]),'PLUSPLUS':([50,51,52,55,56,58,59,61,64,66,67,68,142,143,168,169,],[-17,-18,-73,-96,-97,109,-91,-95,-95,-73,-96,-97,-90,-94,-74,-98,]),'TIMES':([50,51,52,55,56,58,59,61,64,66,67,68,141,142,143,168,169,],[-17,-18,-73,-96,-97,111,-91,-95,-95,-73,-96,-97,111,-90,-94,-74,-98,]),'DIVIDE':([50,51,52,55,56,58,59,61,64,66,67,68,141,142,143,168,169,],[-17,-18,-73,-96,-97,112,-91,-95,-95,-73,-96,-97,112,-90,-94,-74,-98,]),'LESS':([50,51,52,55,56,57,58,59,61,64,66,67,68,108,109,141,142,143,168,169,],[-17,-18,-73,-96,-97,99,-85,-91,-95,-95,-73,-96,-97,-86,-87,-84,-90,-94,-74,-98,]),'LESSEQUAL':([50,51,52,55,56,57,58,59,61,64,66,67,68,108,109,141,142,143,168,169,],[-17,-18,-73,-96,-97,100,-85,-91,-95,-95,-73,-96,-97,-86,-87,-84,-90,-94,-74,-98,]),'GREATER':([50,51,52,55,56,57,58,59,61,64,66,67,68,108,109,141,142,143,168,169,],[-17,-18,-73,-96,-97,101,-85,-91,-95,-95,-73,-96,-97,-86,-87,-84,-90,-94,-74,-98,]),'GREATEREQUAL':([50,51,52,55,56,57,58,59,61,64,66,67,68,108,109,141,142,143,168,169,],[-17,-18,-73,-96,-97,102,-85,-91,-95,-95,-73,-96,-97,-86,-87,-84,-90,-94,-74,-98,]),'DEQUAL':([50,51,52,55,56,57,58,59,61,64,66,67,68,108,109,141,142,143,168,169,],[-17,-18,-73,-96,-97,103,-85,-91,-95,-95,-73,-96,-97,-86,-87,-84,-90,-94,-74,-98,]),'DISTINT':([50,51,52,55,56,57,58,59,61,64,66,67,68,108,109,141,142,143,168,169,],[-17,-18,-73,-96,-97,104,-85,-91,-95,-95,-73,-96,-97,-86,-87,-84,-90,-94,-74,-98,]),'ISEQUAL':([50,51,52,55,56,57,58,59,61,64,66,67,68,108,109,141,142,143,168,169,],[-17,-18,-73,-96,-97,105,-85,-91,-95,-95,-73,-96,-97,-86,-87,-84,-90,-94,-74,-98,]),'PLUS':([50,51,52,55,56,57,58,59,61,64,66,67,68,108,109,140,141,142,143,168,169,188,],[-17,-18,-73,-96,-97,106,-85,-91,-95,-95,-73,-96,-97,-86,-87,106,-84,-90,-94,-74,-98,106,]),'MINUS':([50,51,52,55,56,57,58,59,61,64,66,67,68,108,109,140,141,142,143,168,169,188,],[-17,-18,-73,-96,-97,107,-85,-91,-95,-95,-73,-96,-97,-86,-87,107,-84,-90,-94,-74,-98,107,]),'RPAREN':([50,51,57,58,59,61,63,64,65,66,67,68,69,83,85,86,87,108,109,113,114,131,132,133,134,135,140,141,142,143,144,145,146,147,148,150,151,168,169,174,181,182,183,188,194,],[-17,-18,-76,-85,-91,-95,115,-95,-67,-73,-96,-97,121,129,-106,136,137,-86,-87,143,-106,162,-35,-36,-38,-39,-75,-84,-90,-94,169,-99,-100,-101,-103,-69,-66,-74,-98,-68,-37,-40,-102,193,197,]),'AND':([50,51,57,58,59,61,63,64,65,66,67,68,79,83,108,109,113,127,139,140,141,142,143,148,150,151,159,168,169,174,183,194,],[-17,-18,-76,-85,-91,-95,117,-95,-67,-73,-96,-97,117,117,-86,-87,117,117,117,-75,-84,-90,-94,117,117,117,117,-74,-98,-68,117,117,]),'OR':([50,51,57,58,59,61,63,64,65,66,67,68,79,83,108,109,113,127,139,140,141,142,143,148,150,151,159,168,169,174,183,194,],[-17,-18,-76,-85,-91,-95,118,-95,-67,-73,-96,-97,118,118,-86,-87,118,118,118,-75,-84,-90,-94,118,118,118,118,-74,-98,-68,118,118,]),'XOR':([50,51,57,58,59,61,63,64,65,66,67,68,79,83,108,109,113,127,139,140,141,142,143,148,150,151,159,168,169,174,183,194,],[-17,-18,-76,-85,-91,-95,119,-95,-67,-73,-96,-97,119,119,-86,-87,119,119,119,-75,-84,-90,-94,119,119,119,119,-74,-98,-68,119,119,]),'RBRACKET':([50,51,57,58,59,61,64,65,66,67,68,108,109,139,140,141,142,143,150,151,164,168,169,174,],[-17,-18,-76,-85,-91,-95,-95,-67,-73,-96,-97,-86,-87,168,-75,-84,-90,-94,-69,-66,182,-74,-98,-68,]),'COMMA':([50,51,57,58,59,61,64,65,66,67,68,108,109,132,134,135,140,141,142,143,145,148,150,151,168,169,174,181,182,183,],[-17,-18,-76,-85,-91,-95,-95,-67,-73,-96,-97,-86,-87,163,-38,-39,-75,-84,-90,-94,170,-103,-69,-66,-74,-98,-68,-37,-40,-102,]),'LBRACKET':([52,66,135,],[95,95,164,]),'VOID':([114,],[147,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([2,],[3,]),'declaration':([2,3,],[4,27,]),'var_declaration':([2,3,156,],[5,5,177,]),'echo_stmt':([2,3,35,38,70,80,115,121,129,156,172,173,186,193,],[6,6,77,77,77,125,77,77,77,176,77,77,191,77,]),'selection_stmt':([2,3,35,38,70,115,121,129,172,173,186,193,],[7,7,75,75,75,75,75,75,75,75,75,75,]),'iteration_stmt':([2,3,35,38,70,115,121,129,172,173,186,193,],[8,8,76,76,76,76,76,76,76,76,76,76,]),'fun_declaration':([2,3,28,],[9,9,46,]),'header_declaration':([2,3,],[10,10,]),'var_declaration2':([2,3,12,36,42,43,52,53,138,156,],[11,11,30,82,88,89,94,96,167,11,]),'empty':([2,3,35,38,70,80,85,114,115,121,125,129,156,172,173,176,186,193,],[13,13,13,13,13,13,133,146,13,13,157,13,13,13,13,187,13,13,]),'data_type':([28,31,],[44,53,]),'boolean':([28,31,32,35,37,38,60,70,81,95,97,98,110,114,115,116,120,121,128,129,170,172,173,178,186,189,193,],[48,56,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'simple_expression':([31,32,35,37,38,60,70,81,95,114,115,116,120,121,128,129,170,172,173,186,189,193,],[54,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'additive_expression':([31,32,35,37,38,60,70,81,95,97,114,115,116,120,121,128,129,170,172,173,178,186,189,193,],[57,57,57,57,57,57,57,57,57,140,57,57,57,57,57,57,57,57,57,57,188,57,57,57,]),'term':([31,32,35,37,38,60,70,81,95,97,98,114,115,116,120,121,128,129,170,172,173,178,186,189,193,],[58,58,58,58,58,58,58,58,58,58,141,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'factor':([31,32,35,37,38,60,70,81,95,97,98,110,114,115,116,120,121,128,129,170,172,173,178,186,189,193,],[59,59,59,59,59,59,59,59,59,59,59,142,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'var':([31,32,33,35,37,38,60,70,81,95,97,98,110,114,115,116,120,121,128,129,170,172,173,178,186,189,193,],[61,64,69,64,64,64,64,64,64,64,61,61,61,64,64,64,64,64,64,64,64,64,64,61,64,64,64,]),'expression':([32,35,37,38,60,70,81,95,114,115,116,120,121,128,129,170,172,173,186,189,193,],[63,79,83,79,113,79,127,139,148,79,150,151,79,159,79,183,79,79,79,194,79,]),'statement':([35,38,70,115,121,129,172,173,186,193,],[71,84,122,149,153,160,184,185,192,196,]),'expression_stmt':([35,38,70,115,121,129,172,173,186,193,],[73,73,73,73,73,73,73,73,73,73,]),'compount_stmt':([35,38,70,115,121,129,162,172,173,186,193,],[74,74,74,74,74,74,180,74,74,74,74,]),'return_stmt':([35,38,70,115,121,129,172,173,186,193,],[78,78,78,78,78,78,78,78,78,78,]),'relop':([57,],[97,]),'addop':([57,140,188,],[98,98,98,]),'mulop':([58,141,],[110,110,]),'logic_operator':([63,79,83,113,127,139,148,150,151,159,183,194,],[116,116,116,116,116,116,116,116,116,116,116,116,]),'params':([85,],[131,]),'param_list':([85,163,],[132,181,]),'param':([85,163,],[134,134,]),'args':([114,],[144,]),'args_list':([114,],[145,]),'local_declarations':([125,],[156,]),'selection':([149,185,],[171,190,]),'statement_list':([176,],[186,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> OPENTAG declaration_list CLOSETAG','program',3,'p_program','PHPparser.py',30),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','PHPparser.py',35),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','PHPparser.py',36),
  ('declaration -> var_declaration','declaration',1,'p_declaration','PHPparser.py',42),
  ('declaration -> echo_stmt','declaration',1,'p_declaration','PHPparser.py',43),
  ('declaration -> selection_stmt','declaration',1,'p_declaration','PHPparser.py',44),
  ('declaration -> iteration_stmt','declaration',1,'p_declaration','PHPparser.py',45),
  ('declaration -> fun_declaration','declaration',1,'p_declaration','PHPparser.py',46),
  ('declaration -> header_declaration','declaration',1,'p_declaration','PHPparser.py',47),
  ('echo_stmt -> echo_stmt ECHO data_type SEMICOLON','echo_stmt',4,'p_echo_stmt','PHPparser.py',53),
  ('echo_stmt -> echo_stmt ECHO IDVAR SEMICOLON','echo_stmt',4,'p_echo_stmt','PHPparser.py',54),
  ('echo_stmt -> echo_stmt ECHO fun_declaration SEMICOLON','echo_stmt',4,'p_echo_stmt','PHPparser.py',55),
  ('echo_stmt -> empty','echo_stmt',1,'p_echo_stmt','PHPparser.py',56),
  ('data_type -> NUMBER','data_type',1,'p_data_type','PHPparser.py',62),
  ('data_type -> boolean','data_type',1,'p_data_type','PHPparser.py',63),
  ('data_type -> STRING','data_type',1,'p_data_type','PHPparser.py',64),
  ('boolean -> TRUE','boolean',1,'p_boolean','PHPparser.py',69),
  ('boolean -> FALSE','boolean',1,'p_boolean','PHPparser.py',70),
  ('var_declaration -> var_declaration2 SEMICOLON','var_declaration',2,'p_var_declaration_1','PHPparser.py',75),
  ('var_declaration2 -> IDVAR var_declaration2','var_declaration2',2,'p_var_declaration_2','PHPparser.py',78),
  ('var_declaration2 -> IDVAR','var_declaration2',1,'p_var_declaration_2','PHPparser.py',79),
  ('var_declaration2 -> TIMESTIMES IDVAR','var_declaration2',2,'p_var_declaration_2','PHPparser.py',80),
  ('var_declaration2 -> TIMESTIMES IDVAR var_declaration2','var_declaration2',3,'p_var_declaration_2','PHPparser.py',81),
  ('var_declaration2 -> IDVAR EQUAL data_type var_declaration2','var_declaration2',4,'p_var_declaration_2','PHPparser.py',82),
  ('var_declaration2 -> IDVAR EQUAL data_type','var_declaration2',3,'p_var_declaration_2','PHPparser.py',83),
  ('var_declaration2 -> IDVAR EQUAL IDVAR var_declaration2','var_declaration2',4,'p_var_declaration_2','PHPparser.py',84),
  ('var_declaration2 -> IDVAR EQUAL IDVAR','var_declaration2',3,'p_var_declaration_2','PHPparser.py',85),
  ('var_declaration2 -> AMPERSANT IDVAR var_declaration2','var_declaration2',3,'p_var_declaration_2','PHPparser.py',86),
  ('var_declaration2 -> AMPERSANT IDVAR EQUAL IDVAR var_declaration2','var_declaration2',5,'p_var_declaration_2','PHPparser.py',87),
  ('var_declaration2 -> AMPERSANT IDVAR EQUAL IDVAR','var_declaration2',4,'p_var_declaration_2','PHPparser.py',88),
  ('var_declaration2 -> AMPERSANT IDVAR','var_declaration2',2,'p_var_declaration_2','PHPparser.py',89),
  ('var_declaration2 -> IDVAR EQUAL simple_expression','var_declaration2',3,'p_var_declaration_2','PHPparser.py',90),
  ('fun_declaration -> FUNCTION ID LPAREN params RPAREN','fun_declaration',5,'p_fun_declaration','PHPparser.py',96),
  ('fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt','fun_declaration',6,'p_fun_declaration','PHPparser.py',97),
  ('params -> param_list','params',1,'p_params','PHPparser.py',103),
  ('params -> empty','params',1,'p_params','PHPparser.py',104),
  ('param_list -> param_list COMMA param_list','param_list',3,'p_param_list','PHPparser.py',110),
  ('param_list -> param','param_list',1,'p_param_list','PHPparser.py',111),
  ('param -> IDVAR','param',1,'p_param','PHPparser.py',117),
  ('param -> IDVAR LBRACKET RBRACKET','param',3,'p_param','PHPparser.py',118),
  ('compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK','compount_stmt',7,'p_compount_stmt','PHPparser.py',124),
  ('local_declarations -> local_declarations var_declaration','local_declarations',2,'p_local_declarations','PHPparser.py',129),
  ('local_declarations -> empty','local_declarations',1,'p_local_declarations','PHPparser.py',130),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','PHPparser.py',136),
  ('statement_list -> empty','statement_list',1,'p_statement_list','PHPparser.py',137),
  ('statement -> expression_stmt','statement',1,'p_statement','PHPparser.py',143),
  ('statement -> compount_stmt','statement',1,'p_statement','PHPparser.py',144),
  ('statement -> selection_stmt','statement',1,'p_statement','PHPparser.py',145),
  ('statement -> iteration_stmt','statement',1,'p_statement','PHPparser.py',146),
  ('statement -> echo_stmt','statement',1,'p_statement','PHPparser.py',147),
  ('statement -> return_stmt','statement',1,'p_statement','PHPparser.py',148),
  ('expression_stmt -> expression SEMICOLON','expression_stmt',2,'p_expression_stmt','PHPparser.py',154),
  ('expression_stmt -> SEMICOLON','expression_stmt',1,'p_expression_stmt','PHPparser.py',155),
  ('selection_stmt -> IF LPAREN expression RPAREN statement','selection_stmt',5,'p_selection_stmt_1','PHPparser.py',161),
  ('selection_stmt -> IF LPAREN expression RPAREN statement selection','selection_stmt',6,'p_selection_stmt_1','PHPparser.py',162),
  ('selection -> ELSE statement','selection',2,'p_selection','PHPparser.py',168),
  ('selection -> ELSEIF statement selection','selection',3,'p_selection','PHPparser.py',169),
  ('selection_stmt -> SWITCH LPAREN var RPAREN statement','selection_stmt',5,'p_selection_stmt_2','PHPparser.py',175),
  ('selection_stmt -> CASE NUMBER COLON statement BREAK SEMICOLON','selection_stmt',6,'p_selection_stmt_2','PHPparser.py',176),
  ('selection_stmt -> DEFAULT COLON statement BREAK SEMICOLON','selection_stmt',5,'p_selection_stmt_2','PHPparser.py',177),
  ('iteration_stmt -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement','iteration_stmt',9,'p_iteration_stmt_1','PHPparser.py',183),
  ('iteration_stmt -> WHILE LPAREN expression RPAREN statement','iteration_stmt',5,'p_iteration_stmt_2','PHPparser.py',187),
  ('iteration_stmt -> DO LBLOCK statement SEMICOLON RBLOCK WHILE LPAREN expression RPAREN','iteration_stmt',9,'p_iteration_stmt_3','PHPparser.py',191),
  ('return_stmt -> RETURN SEMICOLON','return_stmt',2,'p_return_stmt','PHPparser.py',195),
  ('return_stmt -> RETURN expression SEMICOLON','return_stmt',3,'p_return_stmt','PHPparser.py',196),
  ('expression -> var EQUAL expression','expression',3,'p_expression_1','PHPparser.py',201),
  ('expression -> simple_expression','expression',1,'p_expression_2','PHPparser.py',205),
  ('expression -> var EQUAL AMPERSANT IDVAR','expression',4,'p_expression_3','PHPparser.py',210),
  ('expression -> expression logic_operator expression','expression',3,'p_expression_4','PHPparser.py',214),
  ('logic_operator -> AND','logic_operator',1,'p_logic_operator','PHPparser.py',218),
  ('logic_operator -> OR','logic_operator',1,'p_logic_operator','PHPparser.py',219),
  ('logic_operator -> XOR','logic_operator',1,'p_logic_operator','PHPparser.py',220),
  ('var -> IDVAR','var',1,'p_var','PHPparser.py',225),
  ('var -> IDVAR LBRACKET expression RBRACKET','var',4,'p_var','PHPparser.py',226),
  ('simple_expression -> additive_expression relop additive_expression','simple_expression',3,'p_simple_expression_1','PHPparser.py',232),
  ('simple_expression -> additive_expression','simple_expression',1,'p_simple_expression_2','PHPparser.py',236),
  ('relop -> LESS','relop',1,'p_relop','PHPparser.py',240),
  ('relop -> LESSEQUAL','relop',1,'p_relop','PHPparser.py',241),
  ('relop -> GREATER','relop',1,'p_relop','PHPparser.py',242),
  ('relop -> GREATEREQUAL','relop',1,'p_relop','PHPparser.py',243),
  ('relop -> DEQUAL','relop',1,'p_relop','PHPparser.py',244),
  ('relop -> DISTINT','relop',1,'p_relop','PHPparser.py',245),
  ('relop -> ISEQUAL','relop',1,'p_relop','PHPparser.py',246),
  ('additive_expression -> additive_expression addop term','additive_expression',3,'p_additive_expression_1','PHPparser.py',252),
  ('additive_expression -> term','additive_expression',1,'p_additivie_expression_2','PHPparser.py',256),
  ('additive_expression -> term MINUSMINUS','additive_expression',2,'p_additive_expression_3','PHPparser.py',260),
  ('additive_expression -> term PLUSPLUS','additive_expression',2,'p_additive_expression_4','PHPparser.py',264),
  ('addop -> PLUS','addop',1,'p_addop','PHPparser.py',268),
  ('addop -> MINUS','addop',1,'p_addop','PHPparser.py',269),
  ('term -> term mulop factor','term',3,'p_term','PHPparser.py',275),
  ('term -> factor','term',1,'p_term','PHPparser.py',276),
  ('mulop -> TIMES','mulop',1,'p_mulop','PHPparser.py',282),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','PHPparser.py',283),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','PHPparser.py',289),
  ('factor -> var','factor',1,'p_factor','PHPparser.py',290),
  ('factor -> NUMBER','factor',1,'p_factor','PHPparser.py',291),
  ('factor -> boolean','factor',1,'p_factor','PHPparser.py',292),
  ('factor -> ID LPAREN args RPAREN','factor',4,'p_factor','PHPparser.py',293),
  ('args -> args_list','args',1,'p_args','PHPparser.py',299),
  ('args -> empty','args',1,'p_args','PHPparser.py',300),
  ('args -> VOID','args',1,'p_args','PHPparser.py',301),
  ('args_list -> args_list COMMA expression','args_list',3,'p_args_list','PHPparser.py',307),
  ('args_list -> expression','args_list',1,'p_args_list','PHPparser.py',308),
  ('header_declaration -> REQUIRE LPAREN STRING RPAREN SEMICOLON','header_declaration',5,'p_header_declaration','PHPparser.py',313),
  ('header_declaration -> INCLUDE LPAREN STRING RPAREN SEMICOLON','header_declaration',5,'p_header_declaration','PHPparser.py',314),
  ('empty -> <empty>','empty',0,'p_empty','PHPparser.py',320),
]
